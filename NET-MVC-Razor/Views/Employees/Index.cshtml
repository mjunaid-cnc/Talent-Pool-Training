@model PaginatedList<NET_MVC_Razor.Models.Domain.Employee>

@{
    ViewData["Title"] = "Index";
}

<h1>Employees</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-dark" />
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                Id
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    Name
                    @if (ViewData["NameSortParm"]!.ToString() == "name_desc")
                    {
                        <i class="fas fa-arrow-down"></i>
                    }
                    else
                    {
                        <i class="fas fa-arrow-up"></i>
                    }
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["SalarySortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    Salary
                    @if (ViewData["SalarySortParm"]!.ToString() == "salary_desc")
                    {
                        <i class="fas fa-arrow-down"></i>
                    }
                    else if (ViewData["SalarySortParm"]!.ToString() == "Salary")
                    {
                        <i class="fas fa-arrow-up"></i>
                    }
                    </a>
            </th>
            <th>
                Email
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Salary)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="text-center">
    <nav>
        <ul class="pagination">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="1" asp-route-currentFilter="@ViewData["CurrentFilter"]">First</a>
                </li>
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.PageIndex - 1)" asp-route-currentFilter="@ViewData["CurrentFilter"]">Previous</a>
                </li>
            }
            @for (var i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@i" asp-route-currentFilter="@ViewData["CurrentFilter"]">@i</a>
                </li>
            }
            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.PageIndex + 1)" asp-route-currentFilter="@ViewData["CurrentFilter"]">Next</a>
                </li>
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@Model.TotalPages" asp-route-currentFilter="@ViewData["CurrentFilter"]">Last</a>
                </li>
            }
        </ul>
    </nav>
</div>
